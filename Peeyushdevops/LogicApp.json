{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "LogicAppIntegrationAccount": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "/subscriptions/310e4856-88aa-42fe-89e6-b964f7797bf9/resourceGroups/myfirstlogicapp/providers/Microsoft.Logic/integrationAccounts/Peeyushpay"
    },
    "servicebus_1_Connection_Name": {
      "type": "string",
      "defaultValue": "servicebus-2"
    },
    "servicebus_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "pay"
    },
    "servicebus_1_connectionString": {
      "type": "securestring",
      "metadata": {
        "description": "Azure Service Bus Connection String"
      }
    },
    "LogicAppLocation": {
      "type": "string",
      "minLength": 1,
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "southafricanorth",
        "southafricawest"
      ],
      "defaultValue": "southindia"
    },
    "LogicAppName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "PeeyushPaySample"
    }
  },
  "variables": {},
  "resources": [
    {
      "properties": {
        "state": "Enabled",
        "integrationAccount": {
          "id": "[parameters('LogicAppIntegrationAccount')]"
        },
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Compose": {
              "type": "Compose",
              "inputs": "@body('Flat_File_Decoding')",
              "runAfter": {
                "Flat_File_Decoding": [
                  "Succeeded"
                ]
              }
            },
            "Flat_File_Decoding": {
              "type": "FlatFileDecoding",
              "inputs": {
                "content": "@{triggerBody()}",
                "integrationAccount": {
                  "schema": {
                    "name": "PeeyushNewSchema"
                  }
                }
              },
              "runAfter": {}
            },
            "For_each": {
              "type": "Foreach",
              "foreach": "@xpath(xml(body('Flat_File_Decoding')),'//*[local-name()=\"Employee\"]')",
              "actions": {
                "Execute_JavaScript_Code": {
                  "type": "JavaScriptCode",
                  "inputs": {
                    "code": "var year=parseInt(workflowContext.actions.Parse_JSON.outputs.body.PeriodEndYear);\r\nvar month=parseInt(workflowContext.actions.Parse_JSON.outputs.body.PeriodEndMonth);\r\nvar day=parseInt(workflowContext.actions.Parse_JSON.outputs.body.PeriodEndWeek);\r\nvar out=week (year,month,day);\r\nfunction week(year,month,day){\r\n     function serial(days) { return 86400000*days; }\r\n     function dateserial(year,month,day) {return (new Date(year,month-1,day).valueOf()); }\r\n     function weekday(date) { return (new Date(date)).getDay()+1; }\r\n     function yearserial(date){return (new Date(date)).getFullYear(); }\r\n     var date = year instanceof Date ? year.valueOf() : typeof year === \"string\"? new Date(year).valueOf() : dateserial(year,month,day),\r\n     date2 = dateserial(yearserial(date - serial(weekday(date-serial(1))) + serial(4)),1,3);\r\n     return ~~((date - date2 + serial(weekday(date2) + 5))/ serial(7));\r\n        }\r\n        return out;"
                  },
                  "runAfter": {
                    "Parse_JSON": [
                      "Succeeded"
                    ]
                  }
                },
                "Parse_JSON": {
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@body('Transform_XML_to_JSON')",
                    "schema": {
                      "properties": {
                        "ActualHours": {
                          "type": "string"
                        },
                        "ContractName": {
                          "type": "string"
                        },
                        "CostCentre": {
                          "type": "string"
                        },
                        "Country": {
                          "type": "string"
                        },
                        "DaysWorked": {
                          "type": "string"
                        },
                        "EmployeeID": {
                          "type": "string"
                        },
                        "HomeSiteId": {
                          "type": "string"
                        },
                        "PayCode": {
                          "type": "string"
                        },
                        "PayCodeDescr": {
                          "type": "string"
                        },
                        "PayrollReference": {
                          "type": "string"
                        },
                        "PeriodDays": {
                          "type": "string"
                        },
                        "PeriodEnd": {
                          "type": "string"
                        },
                        "PeriodEndMonth": {
                          "type": "string"
                        },
                        "PeriodEndWeek": {
                          "type": "string"
                        },
                        "PeriodEndYear": {
                          "type": "string"
                        },
                        "PeriodStart": {
                          "type": "string"
                        },
                        "PeriodStartMonth": {
                          "type": "string"
                        },
                        "PeriodStartWeek": {
                          "type": "string"
                        },
                        "PeriodStartYear": {
                          "type": "string"
                        },
                        "SalaryCode": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "runAfter": {
                    "Transform_XML_to_JSON": [
                      "Succeeded"
                    ]
                  }
                },
                "Send_message": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['servicebus_1']['connectionId']"
                      }
                    },
                    "method": "post",
                    "body": {
                      "ContentData": "@{base64(body('Parse_JSON'))}",
                      "Properties": {
                        "Country": "@body('Parse_JSON')?['Country']"
                      },
                      "MessageId": "@body('Parse_JSON')?['EmployeeID']"
                    },
                    "path": "/@{encodeURIComponent(encodeURIComponent('pay'))}/messages"
                  },
                  "runAfter": {
                    "Execute_JavaScript_Code": [
                      "Succeeded"
                    ]
                  }
                },
                "Transform_XML_to_JSON": {
                  "inputs": {
                    "content": "@{items('For_each')}",
                    "integrationAccount": {
                      "map": {
                        "name": "new19"
                      }
                    }
                  },
                  "type": "Liquid",
                  "kind": "XmlToJson",
                  "runAfter": {}
                }
              },
              "runAfter": {
                "Compose": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {}
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "servicebus_1": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'southindia', '/managedApis/', 'servicebus')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('servicebus_1_Connection_Name'))]",
                "connectionName": "[parameters('servicebus_1_Connection_Name')]"
              }
            }
          }
        },
        "accessControl": {}
      },
      "name": "[parameters('LogicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('LogicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('servicebus_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('servicebus_1_Connection_Name')]",
      "location": "southindia",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'southindia', '/managedApis/', 'servicebus')]"
        },
        "displayName": "[parameters('servicebus_1_Connection_DisplayName')]",
        "parameterValues": {
          "connectionString": "[parameters('servicebus_1_connectionString')]"
        }
      }
    }
  ],
  "outputs": {}
}